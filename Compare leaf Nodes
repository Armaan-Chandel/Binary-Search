/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void sol(TreeNode* root,vector<int>& arr){
        if(root->left==NULL and root->right==NULL){
            arr.push_back(root->val);
            return;
        }
        if(root->left) sol(root->left,arr);
        if(root->right) sol(root->right,arr);
        return;
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> a;
        vector<int> b;
        sol(root1,a);
        sol(root2,b);
        int n=a.size();
        int m=b.size();
        if(a!=b){
            return false;
        }
        for(int i=0;i<n;i++){
            if(a[i]!=b[i]){
                return false;
            }
        }
        return true;
    }
};
